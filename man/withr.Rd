% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/with.R
\docType{package}
\name{withr}
\alias{withr}
\alias{withr-package}
\title{Execute code in temporarily altered environment}
\arguments{
\item{new}{\code{[various]}\cr Values for setting}

\item{code}{\code{[any]}\cr Code to execute in that environment}
}
\description{
All functions prefixed by \code{with_} work as follows. First, a particular
aspect of the global environment is modified (see below for a list).
Then, custom code (passed via the \code{code} argument) is executed.
Upon completion or error, the global environment is restored to the previous
state.
}
\section{withr functions}{

\itemize{
\item \code{\link{with_collate}}: collation order
\item \code{\link{with_dir}}: working directory
\item \code{\link{with_envvar}}: environment variables
\item \code{\link{with_libpaths}}: library paths, replacing current libpaths
\item \code{\link{with_locale}}: any locale setting
\item \code{\link{with_makevars}}: Makevars variables
\item \code{\link{with_options}}: options
\item \code{\link{with_par}}: graphics parameters
\item \code{\link{with_path}}: PATH environment variable
\item \code{\link{with_something}}: Execute code in temporarily altered environment
}
}
\examples{
getwd()
in_dir(tempdir(), getwd())
getwd()

Sys.getenv("HADLEY")
with_envvar(c("HADLEY" = 2), Sys.getenv("HADLEY"))
Sys.getenv("HADLEY")

with_envvar(c("A" = 1),
  with_envvar(c("A" = 2), action = "suffix", Sys.getenv("A"))
)
}

